// ========================================
// INTERACTIVE CONSULTATION QUESTIONNAIRE
// ========================================

class ConsultationQuestionnaire {
    constructor() {
        this.currentQuestionIndex = 0;
        this.answers = {};
        this.questions = this.getQuestions();
        
        // DOM Elements
        this.questionWrapper = document.getElementById('questionWrapper');
        this.progressFill = document.getElementById('progressFill');
        this.currentQuestionSpan = document.getElementById('currentQuestion');
        this.btnBack = document.getElementById('btnBack');
        this.btnNext = document.getElementById('btnNext');
        this.summaryDiv = document.getElementById('consultationSummary');
        this.summaryContent = document.getElementById('summaryContent');
        
        // Check if all elements exist
        if (!this.questionWrapper || !this.progressFill || !this.btnNext) {
            console.error('‚ùå Consultation elements not found!');
            console.log('questionWrapper:', this.questionWrapper);
            console.log('progressFill:', this.progressFill);
            console.log('btnNext:', this.btnNext);
            // Don't return - just log the error
        } else {
            console.log('‚úÖ All consultation elements found, initializing...');
            this.init();
        }
    }

    init() {
        console.log('üöÄ init() called');
        console.log('Questions array:', this.questions);
        console.log('Questions length:', this.questions.length);
        this.renderQuestion();
        this.attachEventListeners();
    }

    getQuestions() {
        return [
            {
                id: 'projectType',
                icon: 'üéØ',
                title: 'Projenizin Ana Amacƒ± Nedir?',
                subtitle: 'Web sitenizin temel i≈ülevini ve hedefini belirleyelim.',
                type: 'single',
                options: [
                    { value: 'corporate', label: 'Kurumsal Kimlik & Tanƒ±tƒ±m', desc: '≈ûirket/marka bilgilendirme sitesi' },
                    { value: 'ecommerce', label: 'E-Ticaret & Online Satƒ±≈ü', desc: '√úr√ºn satƒ±≈üƒ± ve √∂deme sistemi' },
                    { value: 'lead', label: 'M√º≈üteri Kazanƒ±mƒ± (Lead Gen)', desc: 'Form ve teklif toplama odaklƒ±' },
                    { value: 'portfolio', label: 'Portf√∂y & Ki≈üisel Marka', desc: 'ƒ∞≈ülerinizi ve yeteneklerinizi sergileyin' },
                    { value: 'webapp', label: 'Web Uygulamasƒ±', desc: '√ñzel fonksiyonlar ve kullanƒ±cƒ± paneli' }
                ]
            },
            {
                id: 'targetAudience',
                icon: 'üë•',
                title: 'Hedef Kitleniz Kimlerden Olu≈üuyor?',
                subtitle: 'Sitenizi ziyaret edecek ki≈üileri tanƒ±mlayalƒ±m.',
                type: 'text',
                placeholder: '√ñrn: 25-45 ya≈ü arasƒ±, teknoloji meraklƒ±sƒ± profesyoneller...'
            },
            {
                id: 'existingSite',
                icon: 'üåê',
                title: 'Mevcut Bir Web Siteniz Var mƒ±?',
                subtitle: 'Yenileme mi yapacaƒüƒ±z yoksa sƒ±fƒ±rdan mƒ± ba≈ülayacaƒüƒ±z?',
                type: 'single',
                options: [
                    { value: 'none', label: 'Hayƒ±r, Sƒ±fƒ±rdan Ba≈ülayacaƒüƒ±z', desc: 'ƒ∞lk web sitemi olu≈üturuyorum' },
                    { value: 'redesign', label: 'Evet, Yenileme ƒ∞stiyorum', desc: 'Mevcut siteyi g√ºncellemek istiyorum' },
                    { value: 'improve', label: 'Evet, ƒ∞yile≈ütirme ƒ∞stiyorum', desc: 'Bazƒ± eksikleri gidermek istiyorum' }
                ]
            },
            {
                id: 'features',
                icon: '‚öôÔ∏è',
                title: 'Hangi √ñzelliklere ƒ∞htiyacƒ±nƒ±z Var?',
                subtitle: 'ƒ∞htiya√ß duyduƒüunuz t√ºm √∂zellikleri se√ßin (√áoklu se√ßim yapabilirsiniz).',
                type: 'multiple',
                options: [
                    { value: 'contact-form', label: 'ƒ∞leti≈üim Formu' },
                    { value: 'blog', label: 'Blog / Haber Sistemi' },
                    { value: 'gallery', label: 'Galeri / Portf√∂y G√∂sterimi' },
                    { value: 'ecommerce', label: 'E-Ticaret & √ñdeme Sistemi' },
                    { value: 'user-login', label: 'Kullanƒ±cƒ± Giri≈üi / √úyelik' },
                    { value: 'booking', label: 'Randevu / Rezervasyon Sistemi' },
                    { value: 'multi-language', label: '√áoklu Dil Desteƒüi' },
                    { value: 'analytics', label: 'Analitik & Raporlama' },
                    { value: 'social-integration', label: 'Sosyal Medya Entegrasyonu' },
                    { value: 'live-chat', label: 'Canlƒ± Destek / Chatbot' }
                ]
            },
            {
                id: 'designStyle',
                icon: 'üé®',
                title: 'Hangi Tasarƒ±m Stilini Tercih Edersiniz?',
                subtitle: 'Sitenizin g√∂rsel kimliƒüini belirleyelim.',
                type: 'single',
                options: [
                    { value: 'modern-minimal', label: 'Modern & Minimalist', desc: 'Sade, temiz ve profesyonel' },
                    { value: 'bold-creative', label: 'Cesur & Yaratƒ±cƒ±', desc: 'Renkli, dikkat √ßekici ve √∂zg√ºn' },
                    { value: 'corporate', label: 'Kurumsal & Resmi', desc: 'G√ºven veren, klasik ve profesyonel' },
                    { value: 'playful', label: 'Eƒülenceli & Dinamik', desc: 'Gen√ß, enerjik ve interaktif' },
                    { value: 'luxury', label: 'L√ºks & ≈ûƒ±k', desc: 'Zarif, premium ve etkileyici' }
                ]
            },
            {
                id: 'budget',
                icon: 'üí∞',
                title: 'Projeniz ƒ∞√ßin B√ºt√ße Aralƒ±ƒüƒ±nƒ±z Nedir?',
                subtitle: 'En uygun √ß√∂z√ºm√º sunabilmemiz i√ßin b√ºt√ßenizi belirtin.',
                type: 'single',
                options: [
                    { value: 'startup', label: '5,000 - 15,000 ‚Ç∫', desc: 'Ba≈ülangƒ±√ß seviyesi, temel √∂zellikler' },
                    { value: 'standard', label: '15,000 - 30,000 ‚Ç∫', desc: 'Standart, orta d√ºzey √∂zellikler' },
                    { value: 'professional', label: '30,000 - 50,000 ‚Ç∫', desc: 'Profesyonel, geli≈ümi≈ü √∂zellikler' },
                    { value: 'premium', label: '50,000 ‚Ç∫+', desc: 'Premium, tam √∂zelle≈ütirilmi≈ü √ß√∂z√ºm' },
                    { value: 'flexible', label: 'Esnek / G√∂r√º≈üelim', desc: 'Proje detaylarƒ±na g√∂re belirleyelim' }
                ]
            },
            {
                id: 'timeline',
                icon: 'üìÖ',
                title: 'Projenizin Tamamlanma S√ºresi Ne Kadar Olmalƒ±?',
                subtitle: 'Zaman √ßizelgenizi planlayalƒ±m.',
                type: 'single',
                options: [
                    { value: 'urgent', label: '2-4 Hafta (Acil)', desc: 'Hƒ±zlƒ± teslimat gerekli' },
                    { value: 'standard', label: '1-2 Ay (Standart)', desc: 'Normal proje s√ºreci' },
                    { value: 'comfortable', label: '2-3 Ay (Rahat)', desc: 'Detaylƒ± planlama ve geli≈ütirme' },
                    { value: 'flexible', label: 'Esnek / Belirli Deƒüil', desc: 'Kalite odaklƒ±, s√ºre esnek' }
                ]
            },
            {
                id: 'additionalNotes',
                icon: 'üìù',
                title: 'Eklemek ƒ∞stediƒüiniz √ñzel Notlar Var mƒ±?',
                subtitle: 'Projenizle ilgili √∂zel isteklerinizi, referans sitelerinizi veya √∂nemli detaylarƒ± payla≈üƒ±n.',
                type: 'textarea',
                placeholder: '√ñrn: Referans olarak ≈üu siteyi beƒüeniyorum: example.com\nMarka renklerimiz: Mavi ve beyaz\n√ñzel bir √∂zellik istiyorum: ...'
            }
        ];
    }

    attachEventListeners() {
        this.btnNext.addEventListener('click', () => this.nextQuestion());
        this.btnBack.addEventListener('click', () => this.previousQuestion());
        
        // Download brief button
        document.getElementById('btnDownloadBrief')?.addEventListener('click', () => this.downloadBrief());
        
        // Contact me button
        document.getElementById('btnContactMe')?.addEventListener('click', () => {
            document.getElementById('contact').scrollIntoView({ behavior: 'smooth' });
        });
    }

    renderQuestion() {
        console.log('üéØ renderQuestion called');
        const question = this.questions[this.currentQuestionIndex];
        console.log('Current question:', question);
        
        if (!this.questionWrapper) {
            console.error('‚ùå questionWrapper is null!');
            return;
        }
        
        // Update progress
        const progress = ((this.currentQuestionIndex + 1) / this.questions.length) * 100;
        if (this.progressFill) {
            this.progressFill.style.width = `${progress}%`;
        }
        if (this.currentQuestionSpan) {
            this.currentQuestionSpan.textContent = `Soru ${this.currentQuestionIndex + 1}`;
        }
        
        // Generate new question HTML
        const newHTML = this.getQuestionHTML(question);
        
        // Clear and insert new question
        this.questionWrapper.innerHTML = newHTML;
        
        // Force a reflow to ensure the DOM is updated
        void this.questionWrapper.offsetWidth;
        
        // Attach event listeners
        this.attachQuestionEventListeners(question);
        console.log('‚úÖ Question rendered successfully');
        
        // Update navigation buttons
        if (this.btnBack) {
            this.btnBack.style.display = this.currentQuestionIndex > 0 ? 'inline-flex' : 'none';
        }
        this.updateNextButton();
    }

    getQuestionHTML(question) {
        console.log('üìù getQuestionHTML called with:', question);
        let optionsHTML = '';
        
        if (question.type === 'single') {
            console.log('Rendering single choice question');
            optionsHTML = `
                <div class="answer-options">
                    ${question.options.map(option => `
                        <div class="answer-option" data-value="${option.value}">
                            <div class="option-icon">${this.getOptionIcon(option.value)}</div>
                            <div class="option-content">
                                <h4>${option.label}</h4>
                                <p>${option.desc}</p>
                            </div>
                        </div>
                    `).join('')}
                </div>
            `;
        } else if (question.type === 'multiple') {
            console.log('Rendering multiple choice question');
            optionsHTML = `
                <div class="answer-multi-select">
                    ${question.options.map(option => `
                        <div class="checkbox-option" data-value="${option.value}">
                            <input type="checkbox" id="${option.value}" value="${option.value}">
                            <label for="${option.value}">${option.label}</label>
                        </div>
                    `).join('')}
                </div>
            `;
        } else if (question.type === 'text') {
            console.log('Rendering text input question');
            optionsHTML = `
                <div class="answer-text-input">
                    <label>${question.subtitle}</label>
                    <input type="text" placeholder="${question.placeholder}" id="textAnswer">
                </div>
            `;
        } else if (question.type === 'textarea') {
            console.log('Rendering textarea question');
            optionsHTML = `
                <div class="answer-text-input">
                    <label>${question.subtitle}</label>
                    <textarea placeholder="${question.placeholder}" id="textareaAnswer"></textarea>
                </div>
            `;
        }
        
        const html = `
            <div class="question-card">
                <div class="question-header">
                    <span class="question-icon">${question.icon}</span>
                    <h3 class="question-title">${question.title}</h3>
                    <p class="question-subtitle">${question.subtitle}</p>
                </div>
                ${optionsHTML}
            </div>
        `;
        
        console.log('Generated HTML length:', html.length);
        return html;
    }

    getOptionIcon(value) {
        const icons = {
            corporate: 'üè¢',
            ecommerce: 'üõí',
            lead: 'üìß',
            portfolio: 'üé®',
            webapp: '‚öôÔ∏è',
            none: 'üÜï',
            redesign: 'üîÑ',
            improve: '‚¨ÜÔ∏è',
            'modern-minimal': '‚ú®',
            'bold-creative': 'üé®',
            'corporate': 'üíº',
            playful: 'üéÆ',
            luxury: 'üëë',
            startup: 'üå±',
            standard: 'üìä',
            professional: 'üíº',
            premium: 'üíé',
            flexible: 'ü§ù',
            urgent: '‚ö°',
            comfortable: 'üåü'
        };
        return icons[value] || '‚úì';
    }

    attachQuestionEventListeners(question) {
        if (question.type === 'single') {
            const options = this.questionWrapper.querySelectorAll('.answer-option');
            options.forEach(option => {
                option.addEventListener('click', () => {
                    options.forEach(opt => opt.classList.remove('selected'));
                    option.classList.add('selected');
                    this.answers[question.id] = option.dataset.value;
                    this.updateNextButton();
                });
            });
            
            // Pre-select if answer exists
            if (this.answers[question.id]) {
                const selectedOption = this.questionWrapper.querySelector(`[data-value="${this.answers[question.id]}"]`);
                if (selectedOption) selectedOption.classList.add('selected');
            }
        } else if (question.type === 'multiple') {
            const checkboxes = this.questionWrapper.querySelectorAll('input[type="checkbox"]');
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', () => {
                    const parent = checkbox.closest('.checkbox-option');
                    if (checkbox.checked) {
                        parent.classList.add('selected');
                    } else {
                        parent.classList.remove('selected');
                    }
                    
                    this.answers[question.id] = Array.from(checkboxes)
                        .filter(cb => cb.checked)
                        .map(cb => cb.value);
                    this.updateNextButton();
                });
            });
            
            // Pre-select if answers exist
            if (this.answers[question.id]) {
                this.answers[question.id].forEach(value => {
                    const checkbox = this.questionWrapper.querySelector(`input[value="${value}"]`);
                    if (checkbox) {
                        checkbox.checked = true;
                        checkbox.closest('.checkbox-option').classList.add('selected');
                    }
                });
            }
        } else if (question.type === 'text' || question.type === 'textarea') {
            const input = this.questionWrapper.querySelector('#textAnswer, #textareaAnswer');
            input.addEventListener('input', () => {
                this.answers[question.id] = input.value;
                this.updateNextButton();
            });
            
            // Pre-fill if answer exists
            if (this.answers[question.id]) {
                input.value = this.answers[question.id];
            }
        }
    }

    updateNextButton() {
        const question = this.questions[this.currentQuestionIndex];
        const hasAnswer = this.answers[question.id] && 
            (Array.isArray(this.answers[question.id]) ? this.answers[question.id].length > 0 : this.answers[question.id].trim() !== '');
        
        this.btnNext.disabled = !hasAnswer;
        
        // Change button text for last question
        if (this.currentQuestionIndex === this.questions.length - 1) {
            this.btnNext.innerHTML = '<i class="fas fa-check"></i> Analizi Tamamla';
        } else {
            this.btnNext.innerHTML = 'ƒ∞leri <i class="fas fa-arrow-right"></i>';
        }
    }

    nextQuestion() {
        if (this.currentQuestionIndex < this.questions.length - 1) {
            this.currentQuestionIndex++;
            this.renderQuestion();
        } else {
            this.showSummary();
        }
    }

    previousQuestion() {
        if (this.currentQuestionIndex > 0) {
            this.currentQuestionIndex--;
            this.renderQuestion();
        }
    }

    showSummary() {
        this.questionWrapper.style.display = 'none';
        this.btnBack.style.display = 'none';
        this.btnNext.style.display = 'none';
        document.querySelector('.consultation-progress').style.display = 'none';
        this.summaryDiv.style.display = 'block';
        
        this.summaryContent.innerHTML = this.generateSummary();
    }

    generateSummary() {
        const projectTypes = {
            corporate: 'Kurumsal Kimlik & Tanƒ±tƒ±m',
            ecommerce: 'E-Ticaret & Online Satƒ±≈ü',
            lead: 'M√º≈üteri Kazanƒ±mƒ± (Lead Generation)',
            portfolio: 'Portf√∂y & Ki≈üisel Marka',
            webapp: 'Web Uygulamasƒ±'
        };
        
        const designStyles = {
            'modern-minimal': 'Modern & Minimalist',
            'bold-creative': 'Cesur & Yaratƒ±cƒ±',
            'corporate': 'Kurumsal & Resmi',
            'playful': 'Eƒülenceli & Dinamik',
            'luxury': 'L√ºks & ≈ûƒ±k'
        };
        
        const budgets = {
            startup: '5,000 - 15,000 ‚Ç∫ (Ba≈ülangƒ±√ß)',
            standard: '15,000 - 30,000 ‚Ç∫ (Standart)',
            professional: '30,000 - 50,000 ‚Ç∫ (Profesyonel)',
            premium: '50,000 ‚Ç∫+ (Premium)',
            flexible: 'Esnek (G√∂r√º≈ü√ºlecek)'
        };
        
        const timelines = {
            urgent: '2-4 Hafta (Acil)',
            standard: '1-2 Ay (Standart)',
            comfortable: '2-3 Ay (Rahat)',
            flexible: 'Esnek'
        };
        
        let recommendations = this.generateRecommendations();
        
        return `
            <div class="summary-section">
                <h4><i class="fas fa-bullseye"></i> Proje Tipi</h4>
                <p><strong>${projectTypes[this.answers.projectType] || 'Belirtilmedi'}</strong></p>
                <p>${this.getProjectTypeDescription(this.answers.projectType)}</p>
            </div>
            
            <div class="summary-section">
                <h4><i class="fas fa-users"></i> Hedef Kitle</h4>
                <p>${this.answers.targetAudience || 'Belirtilmedi'}</p>
            </div>
            
            <div class="summary-section">
                <h4><i class="fas fa-cogs"></i> ƒ∞stenen √ñzellikler</h4>
                <ul>
                    ${Array.isArray(this.answers.features) ? 
                        this.answers.features.map(f => `<li>${this.getFeatureName(f)}</li>`).join('') : 
                        '<li>Belirtilmedi</li>'}
                </ul>
            </div>
            
            <div class="summary-section">
                <h4><i class="fas fa-palette"></i> Tasarƒ±m Stili</h4>
                <p><strong>${designStyles[this.answers.designStyle] || 'Belirtilmedi'}</strong></p>
            </div>
            
            <div class="summary-section">
                <h4><i class="fas fa-chart-line"></i> B√ºt√ße & Zaman</h4>
                <p><strong>B√ºt√ße:</strong> ${budgets[this.answers.budget] || 'Belirtilmedi'}</p>
                <p><strong>Teslim S√ºresi:</strong> ${timelines[this.answers.timeline] || 'Belirtilmedi'}</p>
            </div>
            
            ${this.answers.additionalNotes ? `
            <div class="summary-section">
                <h4><i class="fas fa-sticky-note"></i> √ñzel Notlar</h4>
                <p>${this.answers.additionalNotes}</p>
            </div>
            ` : ''}
            
            <div class="summary-section">
                <h4><i class="fas fa-lightbulb"></i> Profesyonel √ñnerilerim</h4>
                ${recommendations}
            </div>
        `;
    }

    getProjectTypeDescription(type) {
        const descriptions = {
            corporate: '≈ûirket imajƒ±nƒ±zƒ± g√º√ßlendirecek, profesyonel ve g√ºven veren bir web sitesi olu≈üturacaƒüƒ±z.',
            ecommerce: 'Kullanƒ±cƒ± dostu alƒ±≈üveri≈ü deneyimi ve g√ºvenli √∂deme sistemi ile satƒ±≈ülarƒ±nƒ±zƒ± artƒ±racaƒüƒ±z.',
            lead: 'Etkili formlar ve CTA\'larla potansiyel m√º≈üteri toplama odaklƒ± bir platform geli≈ütireceƒüiz.',
            portfolio: 'ƒ∞≈ülerinizi ve yeteneklerinizi en iyi ≈üekilde sergileyen, etkileyici bir portf√∂y sitesi hazƒ±rlayacaƒüƒ±z.',
            webapp: 'ƒ∞htiya√ßlarƒ±nƒ±za √∂zel, √∂l√ßeklenebilir ve performanslƒ± bir web uygulamasƒ± geli≈ütireceƒüiz.'
        };
        return descriptions[type] || '';
    }

    getFeatureName(feature) {
        const names = {
            'contact-form': 'ƒ∞leti≈üim Formu',
            'blog': 'Blog / Haber Sistemi',
            'gallery': 'Galeri / Portf√∂y',
            'ecommerce': 'E-Ticaret Sistemi',
            'user-login': 'Kullanƒ±cƒ± Giri≈üi',
            'booking': 'Randevu Sistemi',
            'multi-language': '√áoklu Dil',
            'analytics': 'Analitik & Raporlama',
            'social-integration': 'Sosyal Medya',
            'live-chat': 'Canlƒ± Destek'
        };
        return names[feature] || feature;
    }

    generateRecommendations() {
        let recs = [];
        
        // Budget-based recommendations
        if (this.answers.budget === 'startup') {
            recs.push('Ba≈ülangƒ±√ß b√ºt√ßeniz i√ßin MVP (Minimum Viable Product) yakla≈üƒ±mƒ± √∂neririm. Temel √∂zellikleri hayata ge√ßirip, ilerleyen d√∂nemlerde geni≈ületebiliriz.');
        } else if (this.answers.budget === 'premium') {
            recs.push('Premium b√ºt√ßeniz ile tam √∂zelle≈ütirilmi≈ü, ileri seviye animasyonlar ve etkile≈üimli √∂ƒüeler ekleyebiliriz.');
        }
        
        // Timeline recommendations
        if (this.answers.timeline === 'urgent') {
            recs.push('Acil teslimat i√ßin hazƒ±r tema altyapƒ±sƒ± kullanarak hƒ±zlƒ± bir √ß√∂z√ºm √∂nerebilirim. Ancak tam √∂zelle≈ütirilmi≈ü tasarƒ±m i√ßin daha fazla s√ºre gerekebilir.');
        }
        
        // Feature-based recommendations
        if (Array.isArray(this.answers.features)) {
            if (this.answers.features.includes('ecommerce')) {
                recs.push('E-ticaret i√ßin WooCommerce veya Shopify entegrasyonu √∂neriyorum. G√ºvenli √∂deme altyapƒ±sƒ± ve stok y√∂netimi kritik √∂nem ta≈üƒ±yor.');
            }
            if (this.answers.features.includes('booking')) {
                recs.push('Randevu sistemi i√ßin kullanƒ±cƒ± dostu takvim entegrasyonu ve otomatik bildirimler ekleyelim.');
            }
            if (this.answers.features.length > 7) {
                recs.push('√áok sayƒ±da √∂zellik i√ßin mod√ºler bir mimari √∂neririm. Bu sayede sistem √∂l√ßeklenebilir ve y√∂netilebilir olur.');
            }
        }
        
        // Design recommendations
        if (this.answers.designStyle === 'luxury') {
            recs.push('L√ºks tasarƒ±m i√ßin high-end g√∂rsel i√ßerik, √∂zel tipografi ve premium animasyonlar kullanmalƒ±yƒ±z.');
        } else if (this.answers.designStyle === 'modern-minimal') {
            recs.push('Minimalist tasarƒ±m i√ßin beyaz alanlarƒ± etkili kullanarak, odak noktalarƒ±nƒ± vurgulayalƒ±m.');
        }
        
        // Project type specific recommendations
        if (this.answers.projectType === 'ecommerce') {
            recs.push('E-ticaret ba≈üarƒ±sƒ± i√ßin hƒ±zlƒ± y√ºkleme s√ºreleri, mobil uyumluluk ve SEO optimizasyonu kritik √∂neme sahip.');
        }
        
        if (recs.length === 0) {
            recs.push('Projeniz i√ßin detaylƒ± bir teknik dok√ºmantasyon hazƒ±rlayƒ±p, en uygun teknoloji yƒ±ƒüƒ±nƒ±nƒ± belirleyeceƒüim.');
            recs.push('Kullanƒ±cƒ± deneyimini optimize etmek i√ßin A/B testleri ve kullanƒ±labilirlik analizleri yapabiliriz.');
        }
        
        return recs.map(rec => `<span class="recommendation-badge">üí° ${rec}</span>`).join('');
    }

    downloadBrief() {
        const briefContent = this.generateBriefText();
        const blob = new Blob([briefContent], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `web-tasarim-brief-${Date.now()}.txt`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    }

    generateBriefText() {
        return `
WEB TASARIM PROJESƒ∞ BRIEF
============================
Tarih: ${new Date().toLocaleDateString('tr-TR')}

1. PROJE Tƒ∞Pƒ∞
${this.answers.projectType || 'Belirtilmedi'}

2. HEDEF Kƒ∞TLE
${this.answers.targetAudience || 'Belirtilmedi'}

3. MEVCUT DURUM
${this.answers.existingSite || 'Belirtilmedi'}

4. ƒ∞STENEN √ñZELLƒ∞KLER
${Array.isArray(this.answers.features) ? this.answers.features.join(', ') : 'Belirtilmedi'}

5. TASARIM STƒ∞Lƒ∞
${this.answers.designStyle || 'Belirtilmedi'}

6. B√úT√áE
${this.answers.budget || 'Belirtilmedi'}

7. ZAMAN √áƒ∞ZELGESƒ∞
${this.answers.timeline || 'Belirtilmedi'}

8. √ñZEL NOTLAR
${this.answers.additionalNotes || 'Yok'}

============================
Bu brief Mert Y√ºksel tarafƒ±ndan hazƒ±rlanmƒ±≈ütƒ±r.
ƒ∞leti≈üim: mertyuksll@gmail.com
Web: mexsuweb.com
`;
    }
}

// Initialize when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
    console.log('üîç Checking for consultation questionnaire...');
    const consultationDiv = document.getElementById('consultationQuestionnaire');
    
    if (consultationDiv) {
        console.log('‚úÖ Consultation div found!');
        try {
            window.consultationQuestionnaire = new ConsultationQuestionnaire();
            console.log('üìã Interactive Consultation Questionnaire Activated!');
        } catch (error) {
            console.error('‚ùå Error initializing questionnaire:', error);
        }
    } else {
        console.warn('‚ö†Ô∏è Consultation questionnaire div not found in DOM');
    }
});
